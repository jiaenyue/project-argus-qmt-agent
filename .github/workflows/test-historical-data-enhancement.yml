name: Test Historical Data Enhancement

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ make
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov pytest-xdist
    
    - name: Run historical data enhancement tests
      run: |
        # 运行综合测试套件
        pytest tests/test_historical_data_enhancement.py -v --tb=short
        
        # 运行性能基准测试
        pytest tests/test_performance_benchmark.py -v --tb=short
        
        # 运行数据质量验证测试
        pytest tests/test_data_quality_validation.py -v --tb=short
        
        # 运行API集成测试
        pytest tests/test_enhanced_server.py -v --tb=short
    
    - name: Run coverage tests
      run: |
        pytest tests/test_historical_data_enhancement.py \
          --cov=src.argus_mcp.api.enhanced_historical_api \
          --cov=src.argus_mcp.monitoring.historical_performance_monitor \
          --cov=src.argus_mcp.validation.data_quality_validator \
          --cov-report=xml \
          --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: historical-data-enhancement
        name: historical-data-enhancement-coverage
    
    - name: Test performance benchmarks
      run: |
        # 运行性能测试并记录结果
        python -m pytest tests/test_performance_benchmark.py::TestPerformanceBenchmark::test_single_request_performance -v
        python -m pytest tests/test_performance_benchmark.py::TestPerformanceBenchmark::test_concurrent_requests_performance -v
    
    - name: Test data quality validation
      run: |
        # 运行数据质量测试
        python -m pytest tests/test_data_quality_validation.py::TestDataQualityValidation::test_real_world_data_quality -v
        python -m pytest tests/test_data_quality_validation.py::TestDataQualityValidation::test_quality_threshold_validation -v
    
    - name: Test multi-period consistency
      run: |
        # 测试多周期数据一致性
        python -m pytest tests/test_historical_data_enhancement.py::TestMultiPeriodConsistency -v
    
    - name: Test API integration
      run: |
        # 测试API端点集成
        python -m pytest tests/test_enhanced_server.py::TestAPIIntegration -v
    
    - name: Generate test report
      if: always()
      run: |
        # 生成测试报告
        pytest tests/test_historical_data_enhancement.py \
          --html=reports/historical_data_test_report.html \
          --self-contained-html
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          reports/
          htmlcov/
          coverage.xml